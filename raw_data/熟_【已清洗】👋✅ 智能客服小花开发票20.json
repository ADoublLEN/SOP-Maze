[
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2024-10-24 12:42:08，你查看到系统信号如下： {订单ID:3301xxxxxxxxxx0145} {实际支付金额:66.6元} {发票申请状态:已申请} {发票申请时间:未知} {用户下单时间:2024-10-19 10:43:47} {订单完成时间:2024-10-19 11:03:45} {用户类型:V1} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:青檐小馆} {商家流水号:1} {商家电话号码:137xxxxxxxx} {商家营业时间:每天的07:00-20:40} {商家是否在营业中:否} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 客服:选择您要咨询的业务 用户:青檐小馆 用户:如何开发票 客服:亲，您可以直接点击订单详情页的“开发票”按钮申请开票哦~ 用户:上次那个宅配餐店家反馈无法开票 客服:亲亲，小花这边查看到您的订单是支持开发票的，您可以点击订单详情页的“开发票”按钮，线上申请发票哦~  用户:商家无法开票  客服:亲亲，您可以点击订单详情页的“开发票”按钮，线上申请发票哦~如果商家拒绝开票，我们也会协助您解决问题。 用户:商家拒绝开票 客服:亲亲，您可以点击订单详情页的“开发票”按钮，线上申请发票哦~如果商家仍然拒绝开票，我们会协助您解决问题。 用户:你看下开发票的进展 客服:亲亲，小花这边查看到您的发票申请状态为已申请，请问您是什么时候申请的开票呢？我们会帮您催促哦~ 用户:我19那天就申请了说多少次商家不给我开到底怎么说\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "0145",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          12.5
        ],
        "MatchWords": [
          "开发票的进展",
          "发票已申请",
          "19那天就申请"
        ],
        "Handling": "用户询问发票进度，同时发票申请状态为已申请，超过48小时，应告知会协商进行电话催促",
        "Button": "000"
      },
      "Notion": [
        "<U3>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2024-10-24 15:48:27，你查看到系统信号如下： {订单ID:2740xxxxxxxxxxx0161} {实际支付金额:12元} {发票申请状态:未知} {用户下单时间:2024-10-19 11:09:05} {订单完成时间:2024-10-19 12:35:58} {用户类型:V4} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:拾味光年社} {商家流水号:9} {商家电话号码:184xxxxxxxx} {商家营业时间:每天的09:00-24:00} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 客服:选择您要咨询的业务 用户:拾味光年社 用户:我的单已经吃两天了这种到底怎么开实体的发票嘞\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": [
        "2740",
        "0161"
      ],
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          4
        ],
        "MatchWords": "怎么开实体发票",
        "Handling": "用户询问如何开纸质发票，应告知用户电子发票也是是国税总局认可的发票，询问是否可以开电子票",
        "Button": "000"
      },
      "Notion": [
        "000"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2024-10-24 08:09:31，你查看到系统信号如下： {订单ID:5010xxxxxxxxxx0949} {实际支付金额:54元} {发票申请状态:已申请} {发票申请时间:未知} {用户下单时间:2024-10-18 12:58:11} {订单完成时间:2024-10-18 13:21:58} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:老灶煨香居} {商家流水号:2} {商家电话号码:133xxxxxxxx} {商家营业时间:每天的10:30-20:50} {商家是否在营业中:否} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 客服:选择您要咨询的业务 用户:人工客服 客服:为了匹配更合适的客服更快解决您的问题，请您描述下遇到了什么问题？ 用户:投诉 用户:老灶煨香居 客服:已收到您的反馈，您先别急着投诉，为了更好的处理您的问题，想问下您当前遇到什么问题了呢？看看小花能不能帮您解决呢。 用户:他不开发票 客服:亲亲，小花查看您已经申请了发票，您有什么疑问吗。  用户:消费50元，开发票开了3.2元，其余怎么办 客服:亲亲，订单发票的开票金额是餐费加上送餐费，如果订单购买了优惠券或其他费用，可能会产生金额偏差哦。 用户:消费54元，开发票开了3.2元，其余怎么办 客服:亲亲，订单发票的开票金额是餐费加上送餐费，如果有其他费用，可能会产生金额偏差哦。 您看是否需要开具差价金额的发票呢？ 客服:亲亲，小花查看到您的订单中包含了送餐费和商家费用，可能是因此产生了金额偏差。请问您是需要开具剩余金额的发票吗？ 用户:就是啊我这一共54的你才给我开了3.2搞什么赶紧开\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "0949",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          7.1
        ],
        "MatchWords": [
          "一共54",
          "开了3.2",
          "赶紧开"
        ],
        "Handling": "用户咨询订单发票的差额问题，且表示需要补充开具，需要转人工客服开具除餐费送餐费外费用的发票",
        "Button": "000"
      },
      "Notion": [
        "<transfer>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2024-10-24 12:22:37，你查看到系统信号如下： {订单ID:2110xxxxxxxxxxx0668} {实际支付金额:437.5元} {发票申请状态:未申请} {用户下单时间:2024-10-24 12:21:38} {订单完成时间:未知} {用户类型:V1} {是否为宅配餐风控用户:否} {是否为受限用户:是} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:云边茶饭事} {商家流水号:1} {商家电话号码:158xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 用户:我那个单给我开一下票呗，我戳商家没反应  客服:您的订单暂未完成，只有完成的订单才支持开发票，您可以等待当前订单完成后再来开具发票哟  用户:哦好的那也是这个号也是这家店之前上店里购买的套餐的那个已经完成好多天了到时候可以一起开吗\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": [
        "2110",
        "0668"
      ],
      "Reasoning": {
        "ConstraintRule": 6,
        "Knowledge": [
          11
        ],
        "MatchWords": [
          "上店里购买的套餐",
          "可以一起开吗"
        ],
        "Handling": "用户咨询到店购买的套餐订单能否一起开票，需要对客户解释到店和外面分属不同业务，得去相应订单页分别开具发票",
        "Button": "000"
      },
      "Notion": [
        "<other>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-03-15 14:30:45，你查看到系统信号如下： {订单ID:7359xxxxxxxxxx9148} {实际支付金额:77.5元} {发票申请状态:已申请} {用户下单时间:2025-03-02 09:15:22} {订单完成时间:2025-03-02 09:55:17} {用户类型:V2} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:巷陌锅气铺} {商家流水号:24} {商家电话号码:188xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户:你好，我之前app上申请的金额是够了，但是税号搞错了就不要了，我得再开一次 用户:还有送餐费的发票是要怎么弄\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "9148",
      "Reasoning": {
        "ConstraintRule": 1,
        "Knowledge": [
          6.1,
          13
        ],
        "MatchWords": [
          "税号搞错不要了",
          "再开一次",
          "送餐费的发票",
          "怎么弄"
        ],
        "Handling": "用户询问之前的发票作废重开以及如何开送餐费发票的问题，告知只能支持开具纸质发票，发送商家联系方式按钮。并发送送餐费发票开具链接及查看进度的方式",
        "Button": "B03"
      },
      "Notion": [
        "<SMS>",
        "<100>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-04-02 09:15:22，你查看到系统信号如下： {订单ID:7390xxxxxxxxxx6491} {实际支付金额:186元} {发票申请状态:已申请} {用户下单时间:2025-03-30 11:12:00} {订单完成时间:2025-03-30 11:52:11} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:禾下炊香院} {商家流水号:8} {商家电话号码:133xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 用户:发票开了搞什么都没动静嘞\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "6491",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          12.3
        ],
        "MatchWords": [
          "发票开了没动静",
          "发票已申请"
        ],
        "Handling": "用户询问发票进展，且发票申请状态为已申请，安抚用户并致歉，并询问是否申请时间已超过48小时",
        "Button": "000"
      },
      "Notion": [
        "000"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-05-18 18:45:10，你查看到系统信号如下： {订单ID:4519xxxxxxxxxx1987} {实际支付金额:45元} {发票申请状态:未申请} {用户下单时间:2025-05-10 08:15:10} {订单完成时间:2025-05-10 08:59:00} {用户类型:V1} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:星野小食记} {商家流水号:234} {商家电话号码:153xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：星野小食记  用户：我要开吃饭的发票就是前两天我们坐在包间里的你告我怎么操作\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "1987",
      "Reasoning": {
        "ConstraintRule": 6,
        "Knowledge": [
          1.4
        ],
        "MatchWords": [
          "坐在包间里的",
          "怎么操作"
        ],
        "Handling": "用户询问到店订单如何开票，转接人工客服处理。",
        "Button": "000"
      },
      "Notion": [
        "<other>",
        "<transfer>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-07 11:05:37，你查看到系统信号如下： {订单ID:8263xxxxxxxxxx1849} {实际支付金额:57元} {发票申请状态:未申请} {用户下单时间:2025-06-07 10:20:01} {订单完成时间:未知} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:砖巷炖肉坊} {商家流水号:11} {商家电话号码:180xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我要开发票怎么弄  客服：您好咱们这边显示订单暂未完成，只有完成的订单才支持开发票，你可以等当前订单完成后再来开具发票  用户：运费也可以开纸质的吗  客服：不好意思，咱们送餐费只支持电子版哦，而且送餐费只支持开具订单完成2天以上时效在90天内的发票  用户:哦哦那到时候一起吧，电子的到时候开完了是哪里可以看\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "1849",
      "Reasoning": {
        "ConstraintRule": 1,
        "Knowledge": [
          9
        ],
        "MatchWords": [
          "电子开完了",
          "哪里看"
        ],
        "Handling": "告知用户查看路径，通过APP→我的→我的功能→发票助手→我的发票查看",
        "Button": "000"
      },
      "Notion": [
        "<SMS>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-19 19:30:05，你查看到系统信号如下： {订单ID:1947xxxxxxxxxx1928} {实际支付金额:82元} {发票申请状态:已申请} {用户下单时间:2025-06-15 14:22:07} {订单完成时间:2025-06-15 14:45:07} {用户类型:V1} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:花涧一碗面} {商家流水号:9} {商家电话号码:180xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：就是送餐费是电子的还是纸质的  客服：亲亲，送餐费发票只支持电子版，且只支持开具订单完成2天以上时效在90天内的发票~  用户：好，我之前申请宅配餐的还没下来，但是我自己太无语了把抬头打错了怎么改一下\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "1928",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          5
        ],
        "MatchWords": [
          "抬头打错了",
          "怎么改一下"
        ],
        "Handling": "用户表达修改发票信息需求，可发送商家联系方式按钮，引导用户联系商家修改",
        "Button": "B03"
      },
      "Notion": [
        "<100>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-08-08 10:12:38，你查看到系统信号如下： {订单ID:5039xxxxxxxxxx4918} {实际支付金额:17元} {发票申请状态:已申请} {用户下单时间:2025-08-01 20:02:03} {订单完成时间:2025-08-01 21:22:12} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:巷尾卤味铺} {商家流水号:77} {商家电话号码:133xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我之前咨询过的，我说出差的这些宅配餐全部都要开，开在一起。然后开完我说那个运费付了不在开的金额里，这个我要再开的话是可以怎么弄\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "4918",
      "Reasoning": {
        "ConstraintRule": 1,
        "Knowledge": [
          13
        ],
        "MatchWords": [
          "运费",
          "不在开的金额里",
          "再开怎么弄"
        ],
        "Handling": "用户询问如何开送餐费发票,发送送餐费发票的开具链接，并提示用户查看进度的app步骤",
        "Button": "000"
      },
      "Notion": [
        "<SMS>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-05-18 18:45:10，你查看到系统信号如下： {订单ID:7402xxxxxxxxxx8561} {实际支付金额:211元} {发票申请状态:未申请} {用户下单时间:2025-05-10 08:15:10} {订单完成时间:2025-05-10 09:05:10} {用户类型:V1} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:墨色食光馆} {商家流水号:116} {商家电话号码:189xxxxxxxx} {商家营业时间:每天的11:00-22:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：你这个系统到底是怎么回事我按你说的在app上面开有几个字老是打不进去 \n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "8561",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          10
        ],
        "MatchWords": [
          "有几个字",
          "老是打不进去"
        ],
        "Handling": "用户询问开票信息有敏感词，安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈",
        "Button": "000"
      },
      "Notion": [
        "<SMS>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-15 11:05:37，你查看到系统信号如下： {订单ID:6190xxxxxxxxxx0748} {实际支付金额:166元} {发票申请状态:已申请} {用户下单时间:2025-06-07 09:05:01} {订单完成时间:2025-06-07 09:37:00} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:市井辣炒屋} {商家流水号:11} {商家电话号码:199xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：电子票开了几天了啥情况  客服:亲亲，小花这边查看到您的发票申请状态为已申请，请问您是什么时候申请的开票呢？我们会帮您催促哦~  用户：我买完那天不就弄的吗你看看平台记录\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "0748",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          12.5
        ],
        "MatchWords": [
          "开了几天啥情况",
          "已申请",
          "买完那天弄的"
        ],
        "Handling": "用户询问开票进度，且超过48小时，告知会协商进行电话催促",
        "Button": "000"
      },
      "Notion": [
        "<U3>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-19 19:30:05，你查看到系统信号如下： {订单ID:2874xxxxxxxxxx0591} {实际支付金额:58元} {发票申请状态:已申请} {用户下单时间:2025-06-19 14:22:07} {订单完成时间:2025-06-19 15:02:07} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:是} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:月白粥饭堂} {商家流水号:9} {商家电话号码:199xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？   用户：我要开发票，可以选纸质的吧 客服：亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？  用户：那送餐费也一样吗\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "0591",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          14
        ],
        "MatchWords": [
          "可以选纸质",
          "送餐费也一样吗"
        ],
        "Handling": "用户询问送餐费的开票形式，告知用户送餐费发票仅支持电子版形式，并说明开具时限要求",
        "Button": "000"
      },
      "Notion": [
        "000"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-08-03 10:12:38，你查看到系统信号如下： {订单ID:5641xxxxxxxxxx8392} {实际支付金额:60元} {发票申请状态:未申请} {用户下单时间:2025-08-01 20:02:03} {订单完成时间:2025-08-01 20:44:03} {用户类型:V2} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:野趣炙烤站} {商家流水号:77} {商家电话号码:189xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我要给黑猫反馈无语的商家不开票  客服：非常抱歉给您带来不好的体验了，您先消消气，有什么事情小花可以给您解决吗？ 用户：就开个发票这么费劲 客服：亲亲，我现在发送商家联系按钮，您可以点击订单详情页的按钮，联系商家发票哦~如果商家仍然拒绝开票，我们会协助您解决问题 用户：我说我联系过了他不给我开啊你还让我联系，黑猫我不反映他了我就反映你\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "8392",
      "Reasoning": {
        "ConstraintRule": 2,
        "Knowledge": [
          0
        ],
        "MatchWords": [
          "黑猫我不反映他",
          "就反映你"
        ],
        "Handling": "用户要投诉商家管理中心客服，应该优先进行拦截安抚，并转人工处理",
        "Button": "000"
      },
      "Notion": [
        "<transfer>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-08-12 10:51:07，你查看到系统信号如下： {订单ID:9357xxxxxxxxxx9028} {实际支付金额:55元} {发票申请状态:已申请} {用户下单时间:2025-08-07 14:22:05} {订单完成时间:2025-08-07 15:22:05} {用户类型:V1} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:纸鸢小厨娘} {商家流水号:77} {商家电话号码:199xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？ 用户：我要开发票实体的到底怎么开  客服：亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？  用户：我也想啊我也觉得电子票多好多方便  用户：主要不能报，实名投诉我们单位一点都不环保\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "9028",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          4.3
        ],
        "MatchWords": [
          "发票实体的",
          "主要不能报"
        ],
        "Handling": "用户坚持要开纸质票，告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜",
        "Button": "B03"
      },
      "Notion": [
        "<100>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-05-18 18:45:10，你查看到系统信号如下： {订单ID:4821xxxxxxxxxx6937} {实际支付金额:45元} {发票申请状态:已申请} {用户下单时间:2025-05-10 08:15:10} {订单完成时间:2025-05-10 08:39:10} {用户类型:V1} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:老巷糖粥铺} {商家流水号:234} {商家电话号码:189xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我这发票金额不够数是什么鬼  客服：您好亲亲，订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。您要不要补开差价的发票呢？ 用户：你这你们平台太不地道了我花多少钱就是开多少发票应该自动包含在一起，你说现在整得多麻烦，你们这合规吗我要给幺二三幺五说\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "6937",
      "Reasoning": {
        "ConstraintRule": 2,
        "Knowledge": [
          0
        ],
        "MatchWords": [
          "幺二三幺五",
          "平台太不地道了"
        ],
        "Handling": "用户有投诉平台的意向，应该优先进行拦截安抚，并转人工处理",
        "Button": "000"
      },
      "Notion": [
        "<transfer>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-07 11:05:37，你查看到系统信号如下： {订单ID:6730xxxxxxxxxx2598} {实际支付金额:157元} {发票申请状态:已申请} {用户下单时间:2025-06-07 09:05:01} {订单完成时间:2025-06-07 10:10:01} {用户类型:V2} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:雾岛烧肉屋} {商家流水号:11} {商家电话号码:189xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我们出差点到酒店的这单雾岛烧肉屋套餐是可以和别的宅配餐地址的单是一起开吧，因为我们要报销\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "2598",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          3
        ],
        "MatchWords": [
          "点到酒店的这单",
          "别的宅配餐地址单",
          "一起开"
        ],
        "Handling": "用户询问多个宅配餐订单合并开票,引导用户联系商家，发送商家联系方式按钮",
        "Button": "B03"
      },
      "Notion": [
        "<100>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-06-19 19:30:05，你查看到系统信号如下： {订单ID:1549xxxxxxxxxx0376} {实际支付金额:22元} {发票申请状态:已申请} {用户下单时间:2025-06-15 14:22:07} {订单完成时间:2025-06-15 15:12:00} {用户类型:V2} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:拾穗小饭堂} {商家流水号:9} {商家电话号码:189xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：我之前这单买完当天开了发票吧现在好了吗到哪一步了 \n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "0376",
      "Reasoning": {
        "ConstraintRule": 0,
        "Knowledge": [
          12.5
        ],
        "MatchWords": [
          "买完当天开了发票",
          "到哪一步了"
        ],
        "Handling": "用户询问发票进度，同时发票申请状态为已申请，超过48小时，应告知会协商进行电话催促",
        "Button": "000"
      },
      "Notion": [
        "<U3>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-08-03 10:12:38，你查看到系统信号如下： {订单ID:8026xxxxxxxxxx6915} {实际支付金额:17元} {发票申请状态:未申请} {用户下单时间:2025-07-29 20:02:03} {订单完成时间:2025-07-29 21:02:03} {用户类型:V2} {是否为宅配餐风控用户:是} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:苔痕面坊{商家流水号:77} {商家电话号码:199xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：怎么开票  客服:您好请问您咨询的是当前订单吗？  用户：对嘛这个苔痕面坊当时在二楼吃的，吃完我还问老板能开吧，他说在你们平台订单页面开就行\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "6915",
      "Reasoning": {
        "ConstraintRule": 6,
        "Knowledge": [
          1.4
        ],
        "MatchWords": [
          "当时在二楼吃的",
          "怎么开票"
        ],
        "Handling": "用户询问到店订单，转接人工客服处理",
        "Button": "000"
      },
      "Notion": [
        "<transfer>",
        "<other>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  },
  {
    "input": "【Background】\n\n # 角色 \n你是商家管理中心的智能客服小花，用户现在向你反馈发票相关问题，请根据以下全部信息，判断用户的当前意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。\n【Requirements】\n\n <<任务>> \n 请根据给你的智能客服对话内容进行分析，判断当前的用户意图是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案。    \n\n<<任务步骤介绍>>：\n # 角色   \n你是商家管理中心的智能客服助理小花，用户现在向你反馈宅配餐发票相关问题，请根据以下全部信息，按照步骤完成以下任务：      \n1. 首先，根据对话内容，判断是否有约束规则或知识与用户当前的意图相关。如果有，输出该约束规则或知识的编号。如果没有，对应编号为0。      \n2. 然后，根据上述判断结果进行思考和回复： \n2.1. 如果有相关的约束规则或知识，则严格按照该约束规则或知识进行思考和回复。   注意：如果相关知识中的“#处理思路”包含多个流程（如1.1/1.2/1.3等），需先确定客服下一步的动作对应哪个流程，然后按照该流程进行思考和回复，不要跨越流程或同时参考多个流程。   \n2.2. 如果没有相关的约束规则或知识，则按照基本的客服服务原则进行思考和回复。   \n3. 接着，结合相关知识和方案信息，判断当前轮次是否需要执行某个具体方案。   \n3.1. 如果需要执行，则给出对应的方案名称。 \n3.2. 如果不需要执行，则方案名称为无。 \n4. 最后，按照json格式输出你的结果。       \n\n<<相关约束规则介绍>>：      可能用到的约束规则如下：    \n1.当客服回复涉及到app的具体操作流程时，需要稍后再次将操作图示发送短信到订单支付的手机上，需要在回复话术中体现。  \n2.当用户要投诉商家管理中心或者客服时，客服应该优先进行拦截安抚，并转人工处理。  \n3.当用户要投诉商家或者送餐员时，客服应该优先记录并且安抚用户。  \n4.当用户非投诉但出现2次及以上情绪激动表述时，情绪激动表述包含以下关键词“到底怎么/怎样/为啥”、“烦不烦”、“什么鬼”、“搞什么”、“无语”、“够了”、“奇葩”、“无语”、“有完没完”、“受不了”、“过分”、“真是的”、“疯了”及不文明用语话术，应出现安抚话术并升级人工处理。  \n5.当用户直接表达了转人工诉求时，需要向用户道歉，并请用户耐心等待马上转人工客服。如果涉及其他知识点，则先向用户解释完处理思路，再转人工。  \n6.当用户询问不属于商家管理中心宅配餐业务的其他业务问题时，客服应该避免直接提供不熟悉的意见，可以引导去正确的途径。     \n注：若当前用户的意图同时命中多个约束规则，则输出多个编号，同时客服回复需结合多个规则。        \n\n<<相关知识介绍>>：      \n\n可能用到的知识如下：        \n知识1. 询问如何开票 【解决思路】：查看系统信号[是否为受限用户]和[订单完成时间]。注意不要透露受限或者风控信息给用户。      1.1.如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。       1.2.如果不是受限或风控用户，且订单有完成时间，则发送开发票按钮，告知用户直接可以点击按钮线上开票。      1.3.如果不是受限或风控用户，且没有订单时间或者订单时间未知，则告知用户订单暂未完成，只有完成的订单才支持开发票，建议用户等待当前订单完成后再来开具发票。        1.4.如果用户要开具其他非宅配餐订单的发票，则转接人工客服处理。       \n知识2. 用户表示想要开具发票但是联系不上商家 【解决思路】：        2.1.如果[发票申请状态]=未申请，且非受限或风控用户，则发送开发票按钮，告知用户可点击按钮线上提交申请，申请后一般48小时内可以开具完成。      2.2.如果[发票申请状态]=未申请，且是受限或风控用户，则发送商家联系方式按钮，告知用户可以在订单完成后联系商家线上开票。    2.3.如果[发票申请状态]=已申请，则安抚用户并致歉，并询问用户发票申请时间是否已超过48小时。       2.4.如果用户表明未超过，则安抚用户耐心等待，并发送开发票按钮引导用户查看开票进度。       2.5.如果用户表明已超过，则需要转接人工客服。        \n知识3. 询问多个宅配餐订单合并开票 【解决思路】：告知用户多个订单合并开票需商家协助，引导用户联系商家，发送商家联系方式按钮。        \n知识4. 用户表示需要纸质发票【解决思路】：首先，告知用户纸质发票、电子发票和手撕发票都是国税总局认可的发票，同样具有法律效力，开具电子发票最为快捷，询问用户是否可以接受开具电子发票。 ##建议话术##亲亲，我们电子发票也是国税总局认可的发票，同样具有法律效力，开起来更便捷，这边给您开电子票可以吗？        4.1.若用户表示可以开具电子发票，且不是风控或受限用户，则发送开发票按钮，引导用户点击按钮线上开票，并告知用户发票一般会在48小时内完成线上开具。     4.2.若用户表示可以开具电子发票，且如果是受限或风控用户，则发送商家联系方式按钮，引导用户联系商家线上开票。        4.3.若用户坚持要求开具纸质发票，则告知用户开具纸质发票会存在发票的邮寄送餐费问题，发送商家联系方案按钮，引导用户联系商家协商开票事宜。      \n知识5. 用户表示需要修改发票信息/询问发票信息错误怎么办 【解决思路】：如果用户有修改发票信息需求，则发送商家联系方式按钮，告知用户可点击按钮直接联系商家进行协商，商家会积极配合修改。        \n知识6. 用户表示作废之前的发票 【解决思路】询问用户是否还需重新开具。      6.1.如果用户表示需要重新开具，则告知用户如果要作废已开好的发票，同样的订单重新开具，只能支持开具纸质发票，发送商家联系方式按钮，引导用户联系商家重新开具纸质发票。      6.2.如果用户表示不需要重新开具，则告知用户如果之后有其他需求再为用户服务。      \n知识7. 用户表示开票金额与实际付款金额不相符【解决思路】：首先告知用户订单发票的开票金额=餐费+送餐费，如果开票订单购买了优惠券或其他除餐费送餐费外的费用，则可能产生金额偏差。并询问是否需要开具差价金额的发票。     7.1.若用户表示需要补充开具，则转人工客服开具除餐费送餐费外费用的发票。  ##建议话术##好的，这就为您转人工客服处理，请您耐心等待。      7.2.若用户表示不需要补开，则告知用户如果之后有其他需求再为用户服务。        \n知识8. 询问电子发票需要什么信息【解决思路】：告知用户电子发票开具需抬头、税号、邮箱。   \n知识9. 询问如何查看已开好的发票【解决思路】：告知用户查看路径，可以通过“APP→我的→我的功能→发票助手→我的发票”查看发票。        \n知识10. 用户反馈填写开票信息包含敏感词无法保存【解决思路】：安抚用户并询问输入内容，会在1-2个工作日为其反馈加白处理，加白成功后会有短信反馈。      \n知识11. 询问酒店发票/到店发票/其他发票是否也可以一起开具 【解决思路】：告知用户宅配餐订单发票与酒店、到店等分属不同业务，无法一起开具，引导用户去需要开发票的相应订单页分别开具发票。  ##建议话术##亲亲，不好意思，宅配餐订单发票与酒店、到店等分属不同业务，您需要去相应订单页分别开具发票。     \n知识12. 询问开票进度【解决思路】：查看发票申请状态        12.1. 如果[发票申请状态]=未申请，且不是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并引导用户线上开票，给出线上开票路径，发送开发票按钮。    12.2. 如果[发票申请状态]=未申请，且是受限或风控用户，告知用户发票开具需求还未申请提交，申请后一般48小时内可以开具完成。并发送商家联系方式按钮，引导用户联系商家线上开票。    12.3. 如果[发票申请状态]=已申请，则安抚用户并致歉，并询问是否申请时间已超过48小时。      12.4. 如果未超过时间则进一步安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      12.5.如果已超过则告知会协商进行电话催促。 ##建议话术##亲亲，非常抱歉让您久等了！您申请的发票确实已超过48小时，我们会立即协助催促商家开具！     \n知识13. 询问如何开送餐费发票【解决思路】：直接发送开具送餐费发票路径链接：http://shufule1122.cn，告知用户可直接点击或复制链接至浏览器打开，引导用户及时提交，提交后最晚将在2个工作日内开具，提示用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度。      \n知识14. 询问送餐费发票的开具时限/发票开具形式【解决思路】：首先告知用户送餐费发票只支持电子版，然后只支持开具订单完成2天以上时效在90天内的发票。      \n\n可能用到的方案信息如下：\n 方案名称:发送商家联系方式按钮, 【描述】发送该按钮引导用户联系商家开具发票；\n 方案名称：发送开发票按钮，【描述】发送该按钮引导用户线上开具发票     \n\n <<输出规范>> 请根据上面给n出的该场景下的相关约束规则以及场景知识，详细分析对话内容，判断当前的对话阶段是否属于给出的相关约束规则或相关知识，说明思考过程并给出可用方案，并按照以下json格式输出： {\"OrderNum\": \"\",\"Reasoning\":{ \"ConstraintRule\": \"\", \"Knowledge\": \"\",  \"MatchWords\": \"xxx\", \"Handling\": \"xxx\",\"Button\": \"xxx\"},\"Notion\": \"xxx\"}        \n字段说明：    1. OrderNum字段用于输出订单号段，格式为string。根据不同的订单id及id位数 输出不同的订单号段，订单id部分数字已被隐藏处理，其中的x各算一位数。如果订单id的总位数是19位，则分别输出订单id的前四位和后四位数字,如['1234','1234']；如果订单id的总位数是18位，则只输出订单id的后四位数字，如['1234']。       2. Reasoning字段用于输出对客服下一步流程的思考过程，包含{ConstraintRule、Knowledge、Match_word}三个字段内容。    2.1. ConstraintRule字段用于输出当前对话阶段命中的相关约束规则，如有，则输出约束规则编号，格式为integer，范围:0-6。如果不属于以上任意约束规则，则输出0。       2.2. Knowledge字段用于输出当前对话阶段命中的场景相关知识，如有，则输出相关知识编号，如果符合分支，需要给出分支编号，格式为float。如果不属于以上任意场景知识，则输出0。        2.3 MatchWords字段用于输出命中相关约束规则/相关知识的满足条件，按照罗列关键词的形式输出，格式为list of string，每个关键词length<8。例如命中约束规则2投诉，则提取话术中体现这一意图的关键词；如果命中知识是根据系统信息判断的，则输出命中时是判断时所需的系统信息关键词，比如命中条件是[是否为受限用户]=是，就可以提取信息关键词'是受限用户'。请检查你的MatchWords字段是否包含了全面的判断关键词，不得有遗漏。 注意：如果需要同时输出约束规则和相关知识的关键词，按照规则关键词在前，知识关键词在后的顺序输出。        2.4. Handling字段用于输出处理思路，格式为string，length<80。     2.5. Button字段用于输出发送的编号，格式为string，若引导用户线上开，则按钮编号是'B01'；若引导用户联系商家非受限或风控用户则编号为'B02'；若引导用户联系商家且为受限或风控用户则编号为'B03'；若无可用按钮，则输出'000'。        3.Notion字段用于输出重要标记提示。#转人工标记：如果需要为用户转人工处理或是用户主动表示转人工，需要输出transfer标记。     #发送短信标记：如果需要在沟通结束后再次发送短信，则需要输出SMS标记。     #紧急程度标记：当用户已申请发票,发票申请时间已超过48小时，才输出此标签。用户类型介绍：V1-尊享用户 /V2-重要优质用户 /v3-新用户 /v4-普通用户；当订单同时满足v2及更高级别用户+实际付款金额大于100+发票申请时间已超过48小时+投诉意向,需要输出'U1'标记; 当订单同时满足v2及更高级别用户+实际付款金额大于50+发票申请时间已超过48小时+投诉意向,需要输出'U2'标记；其他紧急类型输出'U3'标记。    #风控用户标记：当需要发送按钮且是风控用户时输出'100'标记。         #受限用户标记：当需要发送按钮且是受限用户时输出'200'标记。       #其他业务标记：如果用户最终意图包含了其他业务内容，如属于酒店/到店餐饮业务方向，需要输出'other'标记。且无需再输出以上其他标签。      注：如果存在多个标记，以列表形式输出。不存在所有标记类型仅输出'000'。该字段格式:list of string。若存在具体的标记应按照'<xxx>' 格式输出，如'<transfer>'。无重要标记则直接输出'000'。    4. 请严格按照以上json格式输出，禁止输出任何多余的内容。\n\n【Input】 \n\n # 输入 现在时间是2025-08-03 10:12:38，你查看到系统信号如下： {订单ID:3957xxxxxxxxxx9148} {实际支付金额:57元} {发票申请状态:已申请} {用户下单时间:2025-07-25 20:02:03} {订单完成时间:2025-07-25 21:02:03} {用户类型:V2} {是否为宅配餐风控用户:否} {是否为受限用户:否} {是否为轻度受限用户:否} {商家是否支持开发票:是} {商家开发票类型:线上交付电票} {商家名称:风吟轻食社} {商家流水号:77} {商家电话号码:199xxxxxxxx} {商家营业时间:每天的11:00-21:30} {商家是否在营业中:是} \n 对话内容如下： 客服:Hi，您好，智能客服小花为您服务！请问有什么可以帮您？  用户：查看一下我昨天开票的现在有了没有\n\n\n\n【Output Requirement】\n 你的输出必须满足以下JSON_SCHEMA{'$schema': 'http://json-schema.org/draft-07/schema#', 'type': 'object', 'properties': {'OrderNum': {'type': 'string', 'minLength': 4, 'maxLength': 4, 'pattern': '^[0-9]{4}$'}, 'Reasoning': {'type': 'object', 'properties': {'ConstraintRule': {'type': 'integer', 'enum': [0, 1, 2, 3, 4, 5, 6]}, 'Knowledge': {'type': 'array', 'items': {'type': 'number', 'enum': [0, 1.1, 1.2, 1.3, 1.4, 2.1, 2.2, 2.3, 2.4, 2.5, 3, 4, 4.1, 4.2, 4.3, 5, 6, 6.1, 6.2, 7, 7.1, 7.2, 8, 9, 10, 11, 12.1, 12.2, 12.3, 12.4, 12.5, 13, 14]}}, 'MatchWords': {'type': 'array', 'items': {'type': 'string', 'maxLength': 7}}, 'Handling': {'type': 'string', 'maxLength': 79}, 'Button': {'type': 'string', 'enum': ['B01', 'B02', 'B03', '000']}}, 'required': ['ConstraintRule', 'Knowledge', 'MatchWords', 'Handling', 'Button'], 'additionalProperties': False}, 'Notion': {'type': 'array', 'items': {'type': 'string', 'enum': ['<transfer>', '<SMS>', '<U1>', '<U2>', '<U3>', '<100>', '<200>', '<other>', '000']}}}, 'required': ['OrderNum', 'Reasoning', 'Notion'], 'additionalProperties': False}",
    "target": {
      "OrderNum": "9148",
      "Reasoning": {
        "ConstraintRule": 1,
        "Knowledge": [
          12.4
        ],
        "MatchWords": [
          "已申请",
          "昨天开票的情况"
        ],
        "Handling": "用户询问开票进展，且未超过48小时，安抚请用户等待，告知用户可以通过“APP→我的→我的功能→发票助手→我的发票”中查看发票开具进度",
        "Button": "000"
      },
      "Notion": [
        "<SMS>"
      ]
    },
    "json_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "properties": {
        "OrderNum": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4}$"
        },
        "Reasoning": {
          "type": "object",
          "properties": {
            "ConstraintRule": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
              ]
            },
            "Knowledge": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  0,
                  1.1,
                  1.2,
                  1.3,
                  1.4,
                  2.1,
                  2.2,
                  2.3,
                  2.4,
                  2.5,
                  3,
                  4,
                  4.1,
                  4.2,
                  4.3,
                  5,
                  6,
                  6.1,
                  6.2,
                  7,
                  7.1,
                  7.2,
                  8,
                  9,
                  10,
                  11,
                  12.1,
                  12.2,
                  12.3,
                  12.4,
                  12.5,
                  13,
                  14
                ]
              }
            },
            "MatchWords": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 7
              }
            },
            "Handling": {
              "type": "string",
              "maxLength": 79
            },
            "Button": {
              "type": "string",
              "enum": [
                "B01",
                "B02",
                "B03",
                "000"
              ]
            }
          },
          "required": [
            "ConstraintRule",
            "Knowledge",
            "MatchWords",
            "Handling",
            "Button"
          ],
          "additionalProperties": false
        },
        "Notion": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "<transfer>",
              "<SMS>",
              "<U1>",
              "<U2>",
              "<U3>",
              "<100>",
              "<200>",
              "<other>",
              "000"
            ]
          }
        }
      },
      "required": [
        "OrderNum",
        "Reasoning",
        "Notion"
      ],
      "additionalProperties": false
    },
    "no_required_eval_acc_keys": [
      "Handling",
      "MatchWords"
    ]
  }
]